{"version":3,"sources":["components/ArticleCard.js","components/NavBar.js","components/SnackBarMessage.js","components/Loading.js","components/ArticlesList.js","components/SingleLineGridList.js","components/RecentArticles.js","components/Recommendations.js","components/MostVoted.js","views/Home.js","components/ThumbsUp.js","components/SimilarArticles.js","views/Article.js","views/Login.js","views/SignUp.js","components/NewArticleForm.js","views/NewArticle.js","App.js","serviceWorker.js","client.js","index.js"],"names":["ArticleCard","title","articleId","Card","style","margin","height","minWidth","Typography","variant","Divider","CardContent","to","useStyles","makeStyles","theme","root","flexGrow","rootLink","marginLeft","spacing","NavBar","classes","className","AppBar","position","Toolbar","component","localStorage","getItem","Link","href","color","onClick","event","token","console","log","setItem","SnackBarMessage","message","openFlag","useState","open","setOpen","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","Button","size","IconButton","aria-label","fontSize","display","Loading","CircularProgress","GET_ARTICLES","gql","ArticleList","search","page","useQuery","variables","first","skip","loading","error","data","Container","Grid","container","articles","map","article","item","xs","sm","lg","xl","key","id","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","primary","light","titleBar","SingleLineGridList","GridList","cols","rec","GridListTile","RECENT_ARTICLES","RecentArticles","recentArticles","GET_RECS","Recommendations","recommendations","length","align","MOST_VOTED","MostVoted","mostVoted","TOTAL_PAGES","createMuiTheme","Home","setSearch","onSearch","setOnSearch","offSet","setOffSet","noValidate","onSubmit","e","preventDefault","TextField","label","name","value","onChange","target","type","maxWidth","alignContent","CssBaseline","limit","offset","total","totalPages","pageNumber","CREATE_VOTE","GET_VOTE","ThumbsUp","useMutation","createVote","vote","liked","Fab","SIMILAR_ARTICLES","SimilarArticles","similarArticles","relatedArticle","GET_ARTICLE","Article","summary","CardActions","AUTH_USER","marginTop","flexDirection","alignItems","avatar","secondary","main","form","width","submit","Login","navigate","useNavigate","tokenAuth","username","setUsername","password","setPassword","onError","graphQLErrors","networkError","locations","path","Avatar","required","fullWidth","autoComplete","autoFocus","CREATE_USER","SignUp","createUser","email","setEmail","NewArticleForm","multiline","rows","NewArticle","App","Boolean","window","location","hostname","match","link","createHttpLink","uri","cache","InMemoryCache","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2023f1b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport  CardContent  from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Link } from '@reach/router';\r\nimport { Divider } from '@material-ui/core'\r\nconst ArticleCard = ({ title, articleId }) => {\r\n    return (\r\n        <Card  style = {{margin: 24, height: 140, minWidth: \"200px\"}}>\r\n            <Typography variant =\"subtitle1\">\r\n              {title}\r\n            </Typography>\r\n            <Divider />\r\n            <CardContent>\r\n            <Link to={`/article/${articleId}`} > See More </Link>\r\n            </CardContent>           \r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default ArticleCard;","import React from 'react';\r\nimport AppBar  from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {  Link} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    rootLink: {\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n          }\r\n    }\r\n  }));\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    // const theme = createMuiTheme();\r\n    const classes = useStyles();\r\n    // const navigate = useNavigate();\r\n  \r\n      \r\n     \r\n    // console.log('navbar data',data);\r\n    const onLogOut = (event) => {\r\n        // event.preventDefault()\r\n        let token = localStorage.getItem('token')\r\n        console.log('before logout',token);\r\n        localStorage.setItem('token','');\r\n        token = localStorage.getItem('token')\r\n        console.log('after logout', token)\r\n    } \r\n    \r\n    \r\n   \r\n    return (\r\n        <div className = {classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\"  component={'span'} className = {classes.title}>\r\n                        NewsPaper \r\n\r\n                    </Typography>\r\n                \r\n                    {localStorage.getItem('token') ? (\r\n                        <Typography className={classes.rootLink}>\r\n                            <Link href=\"/\" color=\"inherit\" onClick = {onLogOut}>Log Out</Link>\r\n                        </Typography>\r\n                    ) : (\r\n                        <div>\r\n                            <Link style={{margin: '4px'}} href=\"/login\"  color=\"inherit\">\r\n                                Login\r\n                            </Link>\r\n                            <Link style={{margin: '4px'}} href=\"/signup\"  color=\"inherit\">\r\n                                Sign Up\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n\r\n                      \r\n                </Toolbar>\r\n\r\n               \r\n                \r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, {useState, Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SnackBarMessage  = ({message, openFlag}) => {\r\n    const [open, setOpen] = useState(openFlag);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message={message}\r\n                action={\r\n                    <div>\r\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                            UNDO\r\n                        </Button>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                }\r\n\r\n            />\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default  SnackBarMessage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\nconst Loading = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress />\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport  default  Loading;","import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Texfield from '@material-ui/core/TextField';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport ArticleCard from '../components/ArticleCard';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\nimport Loading from \"./Loading\";\r\nconst SPACE_ID = '';\r\nconst ACCESS_TOKEN = ''\r\n\r\nconst GET_ARTICLES  = gql`\r\n  query Articles ($search: String,$first: Int, $skip: Int) {\r\n      articles(search: $search,first: $first, skip: $skip){\r\n        id\r\n        title \r\n      }\r\n      \r\n      \r\n      \r\n    }\r\n  \r\n`\r\n\r\n\r\nconst ArticleList = ({ search, page }) => {\r\n\r\n\r\n    \r\n    // let articles = []\r\n\r\n   /* getCourses() {\r\n\r\n    } */\r\n\r\n    const {loading, error, data} = useQuery(GET_ARTICLES, {\r\n        variables: {\r\n          search: search,\r\n          first: 10,\r\n          skip: page\r\n        }\r\n      });\r\n    \r\n      if (loading) return <Loading/>\r\n      if (error) {\r\n        console.log(error)\r\n        return  <SnackBarMessage message={\"there was an error while fetching data\"} openFlag={true} />\r\n      } \r\n    \r\n\r\n\r\n        return (\r\n            <div>\r\n                   \r\n           \r\n                    <Container>\r\n                    <Grid container spacing ={2} >\r\n                        { data.articles.map(article => (\r\n                            <Grid item xs={12} sm={6} lg={4} xl ={3} key ={article.id} >\r\n                                <ArticleCard title={article.title}  articleId={article.id} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    </Container>\r\n                   \r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default ArticleList;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Container from '@material-ui/core/Container'\r\nimport ArticleCard from './ArticleCard';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst GET_RECS = gql`\r\nquery {\r\n    recommendations {\r\n        \r\n        article {\r\n            id\r\n            title\r\n            \r\n        } \r\n    }\r\n}\r\n`\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n  }));\r\n\r\n\r\n  const SingleLineGridList = ({articles}) => {\r\n       const classes  = useStyles();\r\n       \r\n/*\r\n      const {loading, error, data} = useQuery(GET_RECS);\r\n      if (loading) {\r\n          \r\n          \r\n          return (<p>loading</p>)\r\n          \r\n      } \r\n      if (error) {\r\n          console.log('error',error);\r\n          return (<p>Error</p>)\r\n          \r\n      } \r\n*/   // console.log('inside this components ', articles[1].id)\r\n      return (\r\n       <Container>   \r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5} >\r\n            {articles.map((rec) => (\r\n              <GridListTile key={rec.id} style={{ minWidth: \"350px\"}}>\r\n               \r\n                <ArticleCard title={rec.title} articleId = {rec.id} />\r\n                \r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n        </Container>\r\n      );\r\n  }\r\n\r\n  export default SingleLineGridList","import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport SingleLineGridList from '../components/SingleLineGridList'\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst RECENT_ARTICLES  = gql`\r\nquery {\r\n  recentArticles {\r\n    id\r\n    title\r\n  }\r\n}\r\n`\r\nconst RecentArticles = () => {\r\n\r\n    const {loading, error, data} = useQuery(RECENT_ARTICLES)\r\n\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n    if (error) {\r\n        console.log(error);\r\n\r\n        return  <SnackBarMessage message={\"there was an error while fetching data\"} openFlag={true} />\r\n    }\r\n\r\n    return (\r\n        <SingleLineGridList articles={data.recentArticles} />\r\n      \r\n    )\r\n}\r\n\r\nexport default RecentArticles","import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport SingleLineGridList from './SingleLineGridList'\r\nimport {Container, Typography, Divider} from '@material-ui/core';\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\nimport Loading from \"./Loading\";\r\nconst GET_RECS = gql`\r\nquery {\r\n    recommendations {\r\n        \r\n        article {\r\n            id\r\n            title\r\n            \r\n        } \r\n    }\r\n}\r\n`\r\n\r\nconst Recommendations = () => {\r\n\r\n    const {loading, error, data} = useQuery(GET_RECS)\r\n\r\n    if(loading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error)\r\n        return  <SnackBarMessage message={\"there was an error while fetching recommendations\"} openFlag={true} />\r\n    }\r\n    console.log('data recs',data)\r\n    \r\n    return (\r\n       <div>\r\n           <Typography variant=\"h4\">\r\n               Recommendations\r\n           </Typography>\r\n           {data.recommendations.length > 0 ? <SingleLineGridList articles={data.recommendations.map(rec => rec.article)} />  :  <Typography variant=\"subtitle2\" align=\"center\">Start reading and liking articles</Typography>}\r\n        <Divider />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Recommendations","import React from \"react\";\r\n\r\nimport SingleLineGridList from \"./SingleLineGridList\";\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\nimport Loading from \"./Loading\";\r\nconst MOST_VOTED = gql`\r\n    query {\r\n        mostVoted {\r\n            id\r\n            title\r\n        }\r\n    }\r\n`\r\nconst MostVoted = () => {\r\n    const {loading, error, data} = useQuery(MOST_VOTED)\r\n\r\n    if(loading) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error)\r\n        return  <SnackBarMessage message={\"there was an error while creating a vote\"} openFlag={true} />\r\n    }\r\n\r\n    return (\r\n        <SingleLineGridList articles={data.mostVoted}/>\r\n    )\r\n\r\n}\r\n\r\nexport  default  MostVoted","import React, {useState} from 'react'\r\n\r\nimport ArticleList from '../components/ArticlesList';\r\nimport NavBar from '../components/NavBar';\r\n// import Recommendations from '../components/Recommendations'\r\nimport { Divider, Container, TextField, Button, Typography, Card } from '@material-ui/core';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport RecentArticles from '../components/RecentArticles'\r\nimport Recommendations from '../components/Recommendations';\r\nimport MostVoted from '../components/MostVoted';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Pagination from \"material-ui-flat-pagination\";\r\nimport SnackBarMessage from \"../components/SnackBarMessage\";\r\nimport Loading from \"../components/Loading\";\r\n\r\n\r\nconst TOTAL_PAGES =  gql`\r\nquery {\r\n    totalPages\r\n}`\r\n/*const Recommendations = () => (\r\n  <Container>\r\n     <Divider/>\r\n     <p>My Recommendations</p>\r\n  </Container> \r\n) */\r\n\r\nconst theme = createMuiTheme()\r\nconst Home = () => {\r\n\r\n    const [search,setSearch] = useState('')\r\n    const [onSearch, setOnSearch] = useState('')\r\n    const [offSet, setOffSet] = useState(0);\r\n    //onst [articles, setArticles] = useState([])\r\n    const {loading,error,data} = useQuery(TOTAL_PAGES)\r\n    const token = localStorage.getItem('token')\r\n    // console.log(token)\r\n\r\n    if (error)  {\r\n        console.log(error)\r\n        return  <SnackBarMessage message={\"there was an error while fetching data\"} openFlag={true} />\r\n    }\r\n    \r\n\r\n    \r\n   \r\n\r\n   \r\n\r\n   // setArticles(data.articles)\r\n    //if (data) {\r\n      //setArticles(data.articles)\r\n     // articles = data.articles\r\n    // } \r\n    // console.log(data);\r\n\r\n    const onSearchFunction = (e) => {\r\n      e.preventDefault()\r\n      console.log(e)\r\n      setOnSearch(search);\r\n\r\n    }\r\n\r\n    const handleClick = (pageNumber) => {\r\n        console.log(`active page is  ${pageNumber}`)\r\n        setOffSet(pageNumber)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Container>\r\n\r\n            <br /> \r\n\r\n            <Typography variant=\"h4\">\r\n              Recent Articles\r\n            </Typography> \r\n\r\n          <Divider />\r\n\r\n          <RecentArticles />\r\n\r\n          <br />\r\n\r\n          <Divider />\r\n\r\n          <br />\r\n              <Typography variant=\"h4\">\r\n                  Most Voted\r\n              </Typography>\r\n                <br/>\r\n              <Divider />\r\n\r\n              <MostVoted />\r\n              <br/>\r\n              <Divider />\r\n          <br />\r\n\r\n\r\n\r\n\r\n\r\n          {token? <Recommendations /> : ''}\r\n\r\n          <br />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <form noValidate onSubmit={onSearchFunction}>\r\n                <TextField \r\n                  variant=\"outlined\"\r\n                  margin = \"normal\"\r\n                  id = \"search\"\r\n                  label = \"Search\"\r\n                  name=\"search\"\r\n                  value = {search}\r\n                  \r\n                  onChange ={(event) => setSearch(event.target.value)}\r\n                />\r\n                <br />\r\n                <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                \r\n\r\n              >\r\n                Search\r\n              </Button>\r\n          </form>    \r\n  \r\n\r\n         \r\n\r\n\r\n          </Container>\r\n         \r\n           \r\n         \r\n            \r\n            <ArticleList search={onSearch}  page = {offSet}/>\r\n\r\n            <Card>\r\n                {!loading ?  (\r\n                    <Container style={{maxWidth: \"500px\",alignContent: \"center\"}} >\r\n                        <MuiThemeProvider theme={theme} >\r\n                            <CssBaseline />\r\n                            <Pagination\r\n                                limit = {10}\r\n                                offset ={offSet}\r\n                                total = {data.totalPages}\r\n                                onClick = {(e,offset) => handleClick((offset))}\r\n                                size = {'large'}\r\n                            />\r\n                        </MuiThemeProvider>\r\n\r\n                    </Container>\r\n                ): (\r\n                    <Loading />\r\n                )}\r\n            </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Fab } from '@material-ui/core'\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport { gql } from 'apollo-boost';\r\nimport {useMutation, useQuery} from '@apollo/react-hooks';\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\n\r\nconst CREATE_VOTE = gql`\r\nmutation CreateVote($articleId: Int) {\r\n    createVote(articleId: $articleId){\r\n        \r\n        user {\r\n            username\r\n        }\r\n        article {\r\n            title\r\n        \r\n        }\r\n\r\n        liked        \r\n    }\r\n}`\r\n\r\nconst GET_VOTE =  gql`\r\n    query Vote($articleId: Int!){\r\n        vote(articleId: $articleId) {\r\n            liked\r\n        }\r\n    }\r\n`\r\nconst ThumbsUp = ({ articleId }) => {\r\n\r\n    const [createVote, {data, loading, error}] = useMutation(CREATE_VOTE);\r\n    let color = \"inherit\";\r\n    const vote = useQuery(GET_VOTE,{\r\n        variables: {\r\n            articleId,\r\n        }\r\n    } )\r\n    if (vote.loading) {\r\n        console.log('loading voted')\r\n    }\r\n    if (vote.error) {\r\n        console.log('error',vote.error);\r\n\r\n        return  <SnackBarMessage message={\"there was an error while creating a vote\"} openFlag={true} />\r\n    }\r\n    if (vote.data) {\r\n        console.log('vote data',vote.data)\r\n        if(vote.data.vote){\r\n            color = vote.data.vote.liked? \"primary\" : \"inherit\";\r\n        }\r\n    }\r\n    if (data) {\r\n        console.log('data', data);\r\n        color = data.createVote.liked? \"primary\" : \"inherit\";\r\n\r\n\r\n\r\n    }\r\n    if (loading) {\r\n        console.log('loading');\r\n\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return  <SnackBarMessage message={\"there was an error while fetching  data\"} openFlag={true} />\r\n    }\r\n\r\n    const createVoteEvent = (event)=> {\r\n        console.log(event)\r\n        createVote({ variables: { articleId } })\r\n\r\n    }\r\n\r\n    return (\r\n        <Fab   color={color} onClick={createVoteEvent}>\r\n\r\n                      <ThumbUpIcon />\r\n        </Fab>\r\n    );\r\n}\r\n\r\nexport default ThumbsUp;","\r\nimport React from 'react'\r\nimport SingleLineGridList from \"./SingleLineGridList\";\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport SnackBarMessage from \"./SnackBarMessage\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst SIMILAR_ARTICLES = gql`\r\n    query SimilarArticles($articleId: Int!){\r\n        similarArticles(articleId: $articleId) {\r\n\r\n            relatedArticle {\r\n                id\r\n                title\r\n                category\r\n            }\r\n        }\r\n    }\r\n`\r\nconst SimilarArticles = ({articleId}) => {\r\n    const {loading,error, data} = useQuery(SIMILAR_ARTICLES, {\r\n        variables: { articleId },\r\n    })\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n    if (error) {\r\n        console.log(error)\r\n        return  <SnackBarMessage message={\"there was an error while fetching similar articles\"} openFlag={true} />\r\n    }\r\n    return (\r\n        <div>\r\n        <SingleLineGridList articles={data.similarArticles.map((rec) => rec.relatedArticle)}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default SimilarArticles","import React from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Container, Divider, Card, CardContent, Typography, CardActions } from '@material-ui/core';\r\nimport ThumbsUp from '../components/ThumbsUp';\r\nimport SnackBarMessage from \"../components/SnackBarMessage\";\r\nimport SimilarArticles from \"../components/SimilarArticles\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst GET_ARTICLE  = gql`\r\nquery Article($articleId: Int!) {\r\n    article(articleId: $articleId) {\r\n        title \r\n        summary \r\n        lang\r\n        similarArticles {\r\n            relatedArticle {\r\n                 title\r\n            }\r\n        } \r\n        \r\n    }\r\n}\r\n`\r\n\r\nconst Article = ({ articleId }) => {\r\n\r\n    const {loading, error, data } = useQuery(GET_ARTICLE, {\r\n        variables: { articleId },\r\n    });\r\n\r\n    if (loading) return <Loading/>\r\n    if (error) {\r\n       console.log(error)\r\n       return  <SnackBarMessage message={\"there was an error while fetching data\"} openFlag={true} />\r\n    };\r\n\r\n\r\n\r\n    console.log(data);\r\n    const token = localStorage.getItem('token')\r\n    console.log(token)\r\n    return (\r\n        <Container >\r\n\r\n\r\n            <br />\r\n\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant = 'h5' component = \"h2\">\r\n                        {data.article.title}\r\n                    </Typography>\r\n\r\n                    <br/>\r\n                    <Divider />\r\n\r\n                    <br />\r\n\r\n\r\n                    <Typography variant=\"body2\" component = \"p\" align=\"justify\">\r\n                        {data.article.summary}\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <Divider />    \r\n                <CardActions>\r\n                {token?  (\r\n                    <div>\r\n                        <p>this really help?</p> \r\n                        <br />\r\n                        <ThumbsUp articleId = {articleId} />\r\n\r\n\r\n                    </div>\r\n                ) : ''}\r\n                    \r\n                </CardActions>\r\n                \r\n\r\n                \r\n\r\n           \r\n\r\n            </Card>\r\n\r\n            <br/> \r\n            <br/> \r\n            <p>Similar Articles</p>\r\n            <br/> \r\n           <SimilarArticles articleId={articleId}/>\r\n        \r\n\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Article;","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useNavigate } from \"@reach/router\"\r\nimport { onError } from \"apollo-link-error\";\r\nimport SnackBarMessage from \"../components/SnackBarMessage\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst AUTH_USER = gql`\r\nmutation TokenAuth($username: String!, $password: String! ) {\r\n    tokenAuth(username: $username, password: $password) {\r\n        token\r\n    }\r\n}`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate()\r\n  const [tokenAuth, {data,loading, error}] = useMutation(AUTH_USER);\r\n  console.log(AUTH_USER)\r\n\r\n  const [username, setUsername ] = useState('');\r\n  const [password, setPassword ] = useState('');\r\n\r\n  const loginUser = (event) => {\r\n      event.preventDefault()\r\n      console.log(username)\r\n      console.log(password)\r\n      tokenAuth({\r\n          variables: {\r\n              username: username,\r\n              password: password\r\n          }\r\n      }) \r\n\r\n\r\n\r\n   \r\n\r\n        \r\n \r\n     \r\n  }\r\n\r\n  if (data) {\r\n    console.log('token?',data);\r\n    localStorage.setItem('token',data.tokenAuth.token);\r\n    navigate('/');\r\n  }\r\n\r\n  if (error) {\r\n    localStorage.setItem('token','');\r\n    console.log('error', error);\r\n\r\n    return  <SnackBarMessage message={\"there was an error while login\"} openFlag={true} />\r\n\r\n  }\r\n  if (loading) {\r\n    localStorage.setItem('token','');\r\n    return <Loading />\r\n  }\r\n\r\n  onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors)\r\n      graphQLErrors.map(({ message, locations, path }) =>\r\n        console.log(\r\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n        ),\r\n      );\r\n  \r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={loginUser}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            onChange= {(event) => setUsername(event.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange= {(event) => setPassword(event.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n        \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n\r\n          >\r\n            Sign In\r\n          </Button>\r\n          \r\n        </form>\r\n      </div>\r\n   \r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useNavigate } from \"@reach/router\"\r\nimport SnackBarMessage from \"../components/SnackBarMessage\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst CREATE_USER = gql`\r\nmutation CreateUser($email: String!, $password: String!, $username: String! ) {\r\n    createUser(email: $email, password: $password, username: $username) {\r\n        user {\r\n            username\r\n        }\r\n    }\r\n}\r\n\r\n`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [createUser, {data, loading, error}] = useMutation(CREATE_USER);\r\n\r\n    const [email, setEmail ] = useState('');\r\n    const [username, setUsername ] = useState('');\r\n    const [password, setPassword ] = useState('');\r\n\r\n    const signUpUser = (event) => {\r\n       event.preventDefault()\r\n\r\n        createUser({\r\n            variables: {\r\n                email,\r\n                password,\r\n                username\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    if(data) {\r\n        console.log(data);\r\n\r\n        navigate('/login')\r\n    }\r\n    if(loading) {\r\n        console.log('loading');\r\n        return  <Loading />\r\n\r\n    }\r\n    if(error) {\r\n        console.log('error',error);\r\n        return  <SnackBarMessage message={\"there was an error while signing up \"} openFlag={true} />\r\n\r\n\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className={classes.paper}>\r\n            <Avatar> \r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n\r\n            <Typography component = \"h1\" variant=\"h5\">\r\n                Sign Up \r\n            </Typography>  \r\n\r\n            <form className= {classes.form} noValidate onSubmit={signUpUser}>\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange = {(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange = {(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"username\"\r\n            label=\"username\"\r\n            type=\"text\"\r\n            id=\"username\"\r\n            onChange = {(e) => setUsername(e.target.value)}\r\n            autoComplete=\"username\"\r\n          />\r\n\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n\r\n          >\r\n            Create Account\r\n        </Button>\r\n            </form>\r\n\r\n          </div>\r\n          \r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useNavigate } from \"@reach/router\"\r\nimport { onError } from \"apollo-link-error\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst NewArticleForm = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    New Article\r\n                </Typography>\r\n                <form className={classes.form} noValidate >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"title\"\r\n                        label=\"title\"\r\n                        name=\"title\"\r\n                        autoComplete=\"title\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"content\"\r\n                        label=\"content\"\r\n                        type=\"text\"\r\n                        id=\"content\"\r\n                        multiline={true}\r\n                        rows={6}\r\n\r\n                        autoComplete=\"content\"\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default NewArticleForm;","import React from 'react'\r\nimport NewArticleForm from \"../components/NewArticleForm\";\r\n\r\nconst NewArticle = () => {\r\n\r\n    return (\r\n       <div>\r\n\r\n\r\n           <NewArticleForm />\r\n       </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport  default  NewArticle;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Router } from '@reach/router'\nimport Home from './views/Home';\nimport Article from './views/Article';\nimport NavBar from './components/NavBar';\n// import { Container } from '@material-ui/core';\nimport Login from './views/Login';\nimport SignUp from './views/SignUp'\nimport NewArticle from \"./views/NewArticle\";\nfunction App() {\n \n    \n\n  return (\n    <div>\n      <NavBar />\n     \n      <Router>\n        <Home  path=\"/\" />\n        <Article path = \"/article/:articleId\" />\n        <Login path = \"/login\"/>\n        <SignUp path = \"/signup\"/>\n        <NewArticle path = \"/article/new\" />\n      </Router>\n     <br/>\n     <br/>\n     <br/>\n    </div>\n    \n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ApolloClient } from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport gql from 'graphql-tag'\r\nimport { setContext } from 'apollo-link-context'\r\n\r\n\r\nconst link = new createHttpLink({uri: 'https://tranquil-mountain-27611.herokuapp.com/graphql/'})\r\n\r\nconst cache = new InMemoryCache()\r\n\r\nconst authLink = setContext((_,{headers})=> {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `JWT ${token}` : ''\r\n        }\r\n    }\r\n\r\n})\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(link),\r\n    cache,\r\n})\r\n\r\n\r\nexport default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport NavBar from './components/NavBar';\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport client from './client';\n/*\nconst httpLink = createHttpLink({\n  uri: 'http://127.0.0.1:8000/graphql/'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\",\n    }\n  }\n});\n\n\n\n\n\nconst client = new ApolloClient({\n  // link: authLink.concat(httpLink),\n  // cache: new InMemoryCache()\n  uri: 'http://127.0.0.1:8000/graphql/',\n  request: (operation) => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token ? `JWT ${token}` : ''\n      }\n    })\n  }\n});\n\nconsole.log(client);\n\n*/\nReactDOM.render(\n  <React.Fragment>\n    <ApolloProvider client = {client}>\n\n      <App />\n    </ApolloProvider>\n    \n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}